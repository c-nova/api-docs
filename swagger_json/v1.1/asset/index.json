{
    "apiVersion": "1.0.0",
    "swaggerVersion": "1.2",
    "basePath": "https://apidocs.eagleeyenetworks.com",
    "resourcePath": "asset",
    "produces": ["application/json"],
    "apis": [
        {
            "path": "/asset/asset/image.jpeg",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET Image",
                    "notes": "Get an image. Return binary image data in JPEG format. <br/>Headers: <br/>cache control headers to allow asset caching. <br/>content-type: image/jpeg. <br/>location: uri of image (same as request)",
                    "nickname": "getAssetImage",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "timestamp",
                            "description": "Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "asset_class",
                            "description": "Asset class of the image. This value can be set to 'all', 'pre', and 'thumb'",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "quality",
                            "description": "Quality of image",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Image was not found"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/prev/image.jpeg",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET previous Image",
                    "notes": "Get the image before the specified timestamp if one exists. <br/>Returns binary image data in JPEG format. <br/> Headers: cache control headers to allow asset caching if no now relative:<br/> x-ee-timestamp: type-timestamp specifies asset type and timestamp of the provided image. Type is one of 'video', 'preview', 'thumb', 'event'. <br/>x-ee-prev: [type-timestamp | unknown ] of previous image matching the class filter OR 'unknown' if the previous image was complex to figure out. <br/>x-ee-next: [type-timestamp | unknown ] as with x-ee-prev, but specifying the following image. <br/>content-type: image/jpeg <br/>location: /asset/asset/image.jpeg?t=20120917213405.700;q=low;c=thumb (identifies actual asset time of image in response).",
                    "nickname": "getAssetPreviousImage",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "timestamp",
                            "description": "Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "asset_class",
                            "description": "Asset class of the image. This value can be set to 'all', 'pre', and 'thumb'",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "quality",
                            "description": "Quality of image",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Image was not found"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/next/image.jpeg",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET Next Image",
                    "notes": "Get the image after the specified timestamp if one exists.  Blocks if not such image currently exists, otherwise identical to Request After Image.<br/> Returns binary image data in JPEG format. <br/> Headers: cache control headers to allow asset caching if no now relative:<br/> x-ee-timestamp: type-timestamp specifies asset type and timestamp of the provided image. Type is one of 'video', 'preview', 'thumb', 'event'. <br/>x-ee-prev: [type-timestamp | unknown ] of previous image matching the class filter OR 'unknown' if the previous image was complex to figure out. <br/>x-ee-next: [type-timestamp | unknown ] as with x-ee-prev, but specifying the following image. <br/>content-type: image/jpeg <br/>location: /asset/asset/image.jpeg?t=20120917213405.700;q=low;c=thumb (identifies actual asset time of image in response).",
                    "nickname": "getAssetNextImage",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "timestamp",
                            "description": "Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "asset_class",
                            "description": "Asset class of the image. This value can be set to 'all', 'pre', and 'thumb'",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "quality",
                            "description": "Quality of image",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        },
                        {
                            "name":"timeout",
                            "description":"Limit of time to wait before responding in decimal milliseconds",
                            "required": false,
                            "type": "integer",
                            "format": "int64",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Image was not found"
                        },
                        {
                            "code": 408,
                            "message": "Time out limit occurred before asset arrived"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/after/image.jpeg",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET After Image",
                    "notes": "Get the image after the specified timestamp if one exists. Returns binary image data in JPEG format. <br/> Headers: cache control headers to allow asset caching if no now relative:<br/> x-ee-timestamp: type-timestamp specifies asset type and timestamp of the provided image. Type is one of 'video', 'preview', 'thumb', 'event'. <br/>x-ee-prev: [type-timestamp | unknown ] of previous image matching the class filter OR 'unknown' if the previous image was complex to figure out. <br/>x-ee-next: [type-timestamp | unknown ] as with x-ee-prev, but specifying the following image. <br/>content-type: image/jpeg <br/>location: /asset/asset/image.jpeg?t=20120917213405.700;q=low;c=thumb (identifies actual asset time of image in response).",
                    "nickname": "getAssetAfterImage",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "timestamp",
                            "description": "Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "asset_class",
                            "description": "Asset class of the image. This value can be set to 'all', 'pre', and 'thumb'",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "quality",
                            "description": "Quality of image",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Image was not found"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/play/video.{video_format}",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET Video",
                    "notes": "Returns a video stream in the requested format",
                    "nickname": "getPlayVideo",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "start_timestamp",
                            "description": "Start Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "end_timestamp",
                            "description": "End Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "video_format",
                            "description": "Video format",
                            "required": true,
                            "type": "string",
                            "paramType": "path",
                            "enum":[
                                "flv (recommended format for web streaming)",
                                "mp4",
                                "ts",
                                "m3u",
                                "m3u8"
                            ]
                        },
                        {
                            "name": "quality",
                            "description": "Indicates requested resolution if multiple are available",
                            "required": false,
                            "type": "string",
                            "paramType": "query",
                            "enum":[
                                "high",
                                "med",
                                "low"
                            ]
                        },
                        {
                            "name": "playback_start_timestamp",
                            "description": "EE timestamp of start of playback.  This is a replacement to the 'to' argument.",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "time_offset",
                            "description": "Start the video stream N ms into the specified timespan.  Allows playing of a smaller segment",
                            "required": false,
                            "type":"string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Video was not found"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/list/image",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET Image List",
                    "notes": "Get image list",
                    "nickname": "getListImage",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "start_timestamp",
                            "description": "Start Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "asset_class",
                            "description": "Asset class of the image. This value can be set to 'all', 'pre', and 'thumb'",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "end_timestamp",
                            "description": "End Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name":"count",
                            "description":"Used instead or with an e argument. If used with an e argument, the count is a limit on the number of entries to return, starting at the starting timestamp.  If used without the e argument, returns N entries.  Support negative value, which returns N entries before <t>, sorted in reverse order - example -5 return 5 events previous to the specified time.",
                            "required":false,
                            "type":"integer",
                            "format":"int64",
                            "paramType":"query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/list/video",
            "operations": [
                {
                    "method": "GET",
                    "summary": "GET Video List",
                    "notes": "Get video list",
                    "nickname": "getListVideo",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Device ID",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "start_timestamp",
                            "description": "Start Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "end_timestamp",
                            "description": "End Timestamp in EEN format: YYYYMMDDHHMMSS.NNN",
                            "required": false,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name":"count",
                            "description":"Used instead or with an e argument. If used with an e argument, the count is a limit on the number of entries to return, starting at the starting timestamp.  If used without the e argument, returns N entries.  Support negative value, which returns N entries before <t>, sorted in reverse order - example -5 return 5 events previous to the specified time.",
                            "required":false,
                            "type":"integer",
                            "format":"int64",
                            "paramType":"query"
                        },
                        {
                            "name": "options",
                            "description": "Additional modifier options. 'coalesce' = coalesces spans together.",
                            "required": false,
                            "type":"string",
                            "paramType": "query",
                            "enum":[
                                "coalesce"
                            ]
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 301,
                            "message": "Asset has been moved to a different archiver"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        }
                    ]
                }
            ]
        },
        {
            "path": "/asset/time_lapse",
            "operations": [
                {
                    "method": "PUT",
                    "summary": "Create a time lapse video",
                    "notes": "This api is used to request the creation of a new time lapse video for a particular camera and time range.  An ID will be returned that you can then use (see GET below) to find out the progress and the download URL of the video, which will be in .mp4 format.",
                    "nickname": "putTimeLapse",
                    "type": "TimeLapseId",
                    "parameters": [
                        {
                            "name": "device_id",
                            "description": "ID of the device the time lapse video should be created for",
                            "required": true,
                            "type": "string",
                            "paramType": "form"
                        },
                        {
                            "name": "start_timestamp",
                            "description": "Start timestamp of the time range to be used for the time lapse video, in EEN format.",
                            "required": true,
                            "type": "string",
                            "paramType": "form"
                        },
                        {
                            "name": "end_timestamp",
                            "description": "End timestamp of the time range to be used for the time lapse video, in EEN format.",
                            "required": true,
                            "type": "string",
                            "paramType": "form"
                        },
                        {
                            "name": "step",
                            "description": "Specifies how many milliseconds between each data point used to create the time lapse. Optional. Defaults to 1000 (1 second).",
                            "required": false,
                            "type": "integer",
                            "format": "int64",
                            "paramType": "form"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 202,
                            "message": "Request accepted"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "Device matching the device_id was not found"
                        },
                        {
                            "code": 463,
                            "message": "Unable to communicate with the camera, contact support"
                        }
                    ]
                },
                {
                    "method": "GET",
                    "summary": "Get Time Lapse information",
                    "notes": "Using the ID returned when requesting the time lapse (see PUT above), this api returns information about the time lapse request. It allows you to find out the progress and how to download the resulting video, which will be in .mp4 format.",
                    "nickname": "getTimeLapse",
                    "type": "TimeLapse",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "ID of the time lapse, which was returned when it was created/requested",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        },
                        {
                            "name": "device_id",
                            "description": "ID of the device associated with the time lapse when it was created/requested",
                            "required": true,
                            "type": "string",
                            "paramType": "query"
                        }
                    ],
                    "responseMessages": [
                        {
                            "code": 200,
                            "message": "Request succeeded"
                        },
                        {
                            "code": 400,
                            "message": "Unexpected or non-identifiable arguments are supplied"
                        },
                        {
                            "code": 401,
                            "message": "Unauthorized due to invalid session cookie"
                        },
                        {
                            "code": 403,
                            "message": "Forbidden due to the user missing the necessary privileges"
                        },
                        {
                            "code": 404,
                            "message": "id or device_id not found"
                        },
                        {
                            "code": 463,
                            "message": "Unable to communicate with the camera, contact support"
                        }
                    ]
                }
            ]
        }
    ],
    "models":{
        "TimeLapseId":{
            "id":"TimeLapseId",
            "required":[],
            "properties":{
                "id":{
                    "type":"string",
                    "required": true,
                    "description":"UUID of the time lapse request"
                }
            }
        },
        "TimeLapse":{
            "id":"TimeLapse",
            "required":[],
            "properties":{
                "percent_complete":{
                    "type":"float",
                    "required": true,
                    "description":"Percentage complete of the request to create a time lapse."
                },
                "url":{
                    "type":"string",
                    "required": true,
                    "description":"URL used to download the time lapse video. Null if not yet complete."
                }
            }
        }
    }
}
